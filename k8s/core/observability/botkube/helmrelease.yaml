apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: botkube
  namespace: observability
spec:
  interval: 30m
  chart:
    spec:
      chart: botkube
      version: "v1.7.0"
      sourceRef:
        kind: HelmRepository
        name: botkube
        namespace: flux-system
      interval: 12h
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    # Environment variables for Discord
    env:
      - name: DISCORD_BOT_TOKEN
        valueFrom:
          secretKeyRef:
            name: botkube-discord-secret
            key: bot_token
      - name: DISCORD_BOT_ID
        valueFrom:
          secretKeyRef:
            name: botkube-discord-secret
            key: bot_id
      - name: DISCORD_GUILD_ID
        valueFrom:
          secretKeyRef:
            name: botkube-discord-secret
            key: guild_id
      - name: DISCORD_CRITICAL_CHANNEL_ID
        valueFrom:
          secretKeyRef:
            name: botkube-discord-secret
            key: critical_channel_id
      - name: DISCORD_NETWORK_CHANNEL_ID
        valueFrom:
          secretKeyRef:
            name: botkube-discord-secret
            key: network_channel_id
      - name: DISCORD_GENERAL_CHANNEL_ID
        valueFrom:
          secretKeyRef:
            name: botkube-discord-secret
            key: general_channel_id

    # Discord communication with all channels
    communications:
      default-group:
        discord:
          enabled: true
          token: "{{ .Env.DISCORD_BOT_TOKEN }}"
          botID: "{{ .Env.DISCORD_BOT_ID }}"
          guildID: "{{ .Env.DISCORD_GUILD_ID }}"
          id: "{{ .Env.DISCORD_BOT_ID }}"
          channels:
            # Critical alerts channel
            critical:
              name: k8s-critical
              id: "{{ .Env.DISCORD_CRITICAL_CHANNEL_ID }}"
              bindings:
                sources:
                  - critical-events
                  - storage-events
              notification:
                disabled: false
            # Network alerts channel
            network:
              name: k8s-network
              id: "{{ .Env.DISCORD_NETWORK_CHANNEL_ID }}"
              bindings:
                sources:
                  - network-events
              notification:
                disabled: false
            # General monitoring channel
            general:
              name: k8s-general
              id: "{{ .Env.DISCORD_GENERAL_CHANNEL_ID }}"
              bindings:
                sources:
                  - general-events
              notification:
                disabled: false

    # Source configurations
    sources:
      # Critical infrastructure events
      critical-events:
        displayName: "Critical Infrastructure Events"
        botkube/kubernetes:
          enabled: true
          namespaces:
            include:
              - "longhorn-system"
              - "authentik"
              - "postgresql"
              - "redis"
              - "flux-system"
          events:
            - type: error
            - type: warning
          resources:
            - type: v1/pods
              events:
                - create
                - delete
                - error
            - type: v1/persistentvolume
              events:
                - create
                - delete
                - error
            - type: v1/nodes
              events:
                - create
                - delete
                - error

      # Storage and Longhorn events
      storage-events:
        displayName: "Storage Events"
        botkube/kubernetes:
          enabled: true
          namespaces:
            include:
              - "longhorn-system"
          events:
            - type: error
            - type: warning

      # Network connectivity events
      network-events:
        displayName: "Network Events"
        botkube/kubernetes:
          enabled: true
          namespaces:
            include:
              - "kube-system"
              - "cloudflared"
              - "external-dns"
          events:
            - type: error
            - type: warning
          resources:
            - type: v1/services
              events:
                - create
                - delete
                - error
            - type: v1/endpoints
              events:
                - create
                - update
                - delete
                - error

      # General cluster events
      general-events:
        displayName: "General Events"
        botkube/kubernetes:
          enabled: true
          namespaces:
            include:
              - "default"
              - "observability"
          events:
            - type: normal
            - type: warning
          resources:
            - type: v1/pods
              events:
                - create
                - delete
            - type: apps/v1/deployments
              events:
                - create
                - update
                - delete

    # Analytics and settings
    analytics:
      disable: true

    settings:
      clusterName: "kjho.me"
      upgradeNotifier: false
      log:
        level: info
        format: json

    # Resource settings
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 64Mi

    # Security context
    securityContext:
      runAsUser: 101
      runAsGroup: 101
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL

    # Service account with minimal required permissions
    serviceAccount:
      create: true
      annotations: {}

    # Add node selector for better scheduling
    nodeSelector: {}
    tolerations: []
    affinity: {}
